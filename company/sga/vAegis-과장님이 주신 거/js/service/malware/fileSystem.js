
var fileNodeMap = {};
var fileMap = {};
$(function () {

});

function requestFileSystem(sel, path) {	
	var name = sel.equipmarkname;
	var data = {};
	 
	if(path == null || path == '/'){
		data.PATH = "/"
		$('#assetInfo').text(name);		
		initFileTree('Tree02');	
		fileNodeMap = {};
		fileMap = {};
	} else {
		data.PATH = path;
	} 	
	$('#fileInfo').text('조회 중...');
	
	data.TYPE = "filedirectory";
	data.IP = sel.masterip;
	data.ID = sel.hardwareid;
	data.FIRSTKEY = parseInt(sel.hardwareid.substring(1));

	console.log(data);
	cf_requestServer(_TR_MALWARE_FILE_SEARCH, data, lf_serviceCall800204CallBack);
}

function selTreeNode(data) {
	if(!data.node) return;
	if(!data.node.original) return;
	
	var filePath = data.node.original.cloudid;
	$('#filename').val(filePath);
	
	requestFileSystem(selectData, filePath);
} 

function initFileTree(treeName) {
	var parentId = 'filesystem';
	var pNode = $('#' + treeName + ' .tree_wrap').jstree(true).get_node($('#Tree02 li[data-jstree*=' + parentId + ']'));
	if(!pNode) pNode = $('#' + treeName + ' .tree_wrap').jstree(true).get_node(fileNodeMap['filesystem']);
	if(!pNode) return false;
	
	//console.log(pNode);	
	
	var children = $('#' + treeName + ' .tree_wrap').jstree().get_node(pNode).children;
	//console.log(children);
	$('#' + treeName + ' .tree_wrap').jstree('delete_node', children);
	$('#Tree02 .tree_wrap').jstree("open_all");
}

function addFSNode(fileData) {
	var filePath = fileData.filePath;

	if(filePath.indexOf('/') >= 0) {
		addFSNodeLinux(fileData);
	} else {
		addFSNodeWin(fileData);
	}

}
function addFSNodeLinux(fileData) {
	var filePath = fileData.filePath;
	
	$('#fileInfo').text('');		
	var fileSplit = filePath.split('/');	
	var depth = fileSplit.length;
	var fileName = fileSplit[depth-1];
	
	
	var type = fileData.fileType==1? "folder":"file";
	var parentId;
	var pNode;

	if(depth <= 2) {
		pNode = $('#Tree02 .tree_wrap').jstree(true).get_node($('#Tree02 li[data-jstree*=_filesystem]'));
	} else {
		var n = filePath.lastIndexOf('/');
		parentId = filePath.substring(0, n);
		pNode = $('#Tree02 .tree_wrap').jstree(true).get_node(fileNodeMap[parentId]);
	}

	if(!pNode) {
		console.log('부모를 찾을 수 없습니다');
		return false;
	}
	if(fileNodeMap[filePath]) {
		console.log('이미 추가 되어있는 노드입니다 -> ' + filePath);
		return false;
	}

	var sel = pNode.id;
    sel = sel[0];
            
    var ref = $('#Tree02 .tree_wrap').jstree(true);
    var newNode = {
    	"cloudid": filePath, 
    	"type": type, 
    	"state" : "open" 
    };

	sel = ref.create_node(pNode, newNode, "last", null);

    if(sel) {
    	fileNodeMap[filePath] = sel;
    	ref.rename_node(sel, fileName); 
    	fileMap[sel] = fileData;    
    }
    
    if(depth <= 2) {
    	$('#Tree02 .tree_wrap').jstree("open_all");
    }
}

function addFSNodeWin(fileData) {
	var filePath = fileData.filePath;
	
	$('#fileInfo').text('');		
	var fileSplit = filePath.split('\\');	
	var depth = fileSplit.length;
	var fileName = fileSplit[depth-1];
	
	
	var type = fileData.fileType==1? "folder":"file";
	var parentId;
	var pNode;

	if(fileName == '') { //fileName == ''  일 경우에는 드라이브 정보
		fileName = filePath;
		pNode = $('#Tree02 .tree_wrap').jstree(true).get_node($('#Tree02 li[data-jstree*=_filesystem]'));
	} else {
		var n = filePath.lastIndexOf('\\');
		parentId = filePath.substring(0, n);
		if(parentId.endsWith(":")) parentId = parentId + "\\";
		pNode = $('#Tree02 .tree_wrap').jstree(true).get_node(fileNodeMap[parentId]);
	}

	if(!pNode) {
		console.log('부모를 찾을 수 없습니다');
		return false;
	}
	if(fileNodeMap[filePath]) {
		console.log('이미 추가 되어있는 노드입니다 -> ' + filePath);
		return false;
	}

	var sel = pNode.id;
    sel = sel[0];
            
    var ref = $('#Tree02 .tree_wrap').jstree(true);
    var newNode = {
    	"cloudid": filePath, 
    	"type": type, 
    	"state" : "open" 
    };

	sel = ref.create_node(pNode, newNode, "last", null);

    if(sel) {
    	fileNodeMap[filePath] = sel;
    	ref.rename_node(sel, fileName); 
    	fileMap[sel] = fileData;    
    }
    
    if(depth <= 2) {
    	$('#Tree02 .tree_wrap').jstree("open_all");
    }
}



function lf_serviceCall800204CallBack(data) {
	//console.log('lf_serviceCall800204CallBack');
	//console.log(data.body);
	
}
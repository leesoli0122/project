
var selectData = {};
var treeNodeMap = {};
var dataMap = {};
var waitStop = false;
var test_status = 0;
const _STATUS = {
	'SCAN_IDLE' : 0,
	'SCAN_INIT' : 1,
	'SCAN_START' : 2,
	'SCAN_FIN' : 3,
	'SCAN_FAIL' : 9
}

const _MODE = {
	'SKIP' : 4,
    'ON' : 3,
    'OFF' : 0,
    'WARN' : 1        
};

const _SCANMODE = {
	'NORMAL' : 0,
	'OFF' : 0,
	'SUBDIR' : 1,
    'MOVE' : 4,
    'COPY' : 8,
    'REMOVE' : 16,
    'EXECACL' : 32
};


var table;
$(function () {
	table = $('#malwareTable').DataTable();
	table.destroy();
	table.clear().draw();
	
	selectGroupList();	
	initAgent();	
	initPane();
	initEvent();
});

function stopScan() {
	var data = {};	
	data.equipmarkname = selectData.equipmarkname;
	data.masterip = selectData.masterip;    	
	data.equip_id = selectData.hardwareid;
	
	waitStop = true;
	cf_requestServer(_TR_MALWARE_SCAN_STOP, data, lf_serviceCall800203CallBack);
}

function startScan() {
	var data = {};
	var option = {};
	var policyList = [];
	
	data.equipmarkname = selectData.equipmarkname;
	data.masterip = selectData.masterip;    	
	data.equip_id = selectData.hardwareid;
	
	var rows = table.rows().data();
	var realCount = 0;
	$.each(rows, function(index, item){
        var policy = new Object(); // mode (ON: 3, OFF: 0)
        policy.mode = _MODE[item[0]];
        policy.filename = item[1];
        policyList.push(policy);
        
        if(_MODE['ON'] == policy.mode) realCount++;
    });
	
    if(policyList.length == 0) {
    	alert('검사 파일 경로를 올바르게 입력해주세요.');
    	return;
    }
    
    if(realCount == 0) {
    	alert('검사 대상 파일이 존재하지 않습니다.');
    	return;
    }
    
	data.policyList = policyList;
	
	var radioArray = $('div.action').find('input');
	option.action = 0;
	if(radioArray.eq(3).prop('checked')) {
		option.action |= _SCANMODE['REMOVE'];
	} else if(radioArray.eq(2).prop('checked')) {
		option.action = _SCANMODE['COPY'];
	} else if(radioArray.eq(1).prop('checked')) {
		option.action |= _SCANMODE['MOVE'];
	} else {
		option.action |= _SCANMODE['OFF'];
	}
	
	if($('#chk00').prop('checked')) {
		option.subdir = _SCANMODE['SUBDIR'];
	} else {
		option.subdir = _SCANMODE['NORMAL'];
	}
	
	data.option = option;
	data.mode = _MODE['ON'];
	
	console.log(data);
	swal("멀웨어 수동 검사","설정한 경로에 대해서 검사를 진행하시겠습니까?","./assets/images/icon_alert01.png", {
        buttons: ["취소", "확인"],
    }).then(function(willDelete) {
        if (willDelete) {
        	console.log(data);
        	cf_requestServer(_TR_MALWARE_SCAN_START, data, lf_serviceCall800202CallBack);           
        }
    });
}

// 자산 선택 후 검사 결과 조회 또는 검사 결과가 들어왔을 경우

function notifyScanProgress(d) {
	var data = {};
	data.progress('80'); //
	data.state(''); //
	date.scan('/home/temp'); //
	lf_setModalData(data);
	
	if($('#progress_modal_malware').css('display') == 'none') {
		$('#progressBtn').trigger('click');			
	}
}

function initEvent() {
	$('a.malware_add_btn').on('click',function(e){
		var editRuleIdx = parseInt($('#editRuleIdx').val());
		
		var filename = $('#filename').val();
		var mode = $('#mode').val();
		if (!filename) {
            alert('파일 경로의 값이 비어있습니다.');
            return;
        } else if(!filename.startsWith('/') && !/^[a-zA-Z]{1}:/g.test(filename)) {
        	alert('파일 경로를 올바르게 입력해주세요.');
            return;
        }
        
		var rows = table.rows().data(); // 중복 정책 확인
		var isDuplicated = false;
		
		$.each(rows, function(index, item) {
			if(editRuleIdx == index) return;
			if (item[1] == filename) {
            	alert('중복된 정책이 존재합니다.');
            	isDuplicated = true;
            }                        
        });
        if(isDuplicated) return;
        
		if($(this).hasClass("policy_add")) {
			table.row.add([
	            mode,
	            filename,
	            '<a href="#" class="rule_edit" style="text-align: center; color: #bbb; font-size: 13px; font-weight: 400;">수정</a> / <a href="#" class="malware_del" style="text-align: center; color: #bbb; font-size: 13px; font-weight: 400;">삭제</a>',
	            '<a href="#" class="rule_align_up" style="text-align: center; color: #bbb; font-size: 13px; font-weight: 400;">↑</a> <a href="#" class="rule_align_down" style="text-align: center; color: #bbb; font-size: 13px; font-weight: 400;">↓</a>'
	        ]);
		} else if($(this).hasClass("policy_edit")) {
			 var editRow = [ 
             	mode, filename, 
             	'<a href="#" class="rule_edit" style="text-align: center; color: #bbb; font-size: 13px; font-weight: 400;">수정</a> / <a href="#" class="malware_del" style="text-align: center; color: #bbb; font-size: 13px; font-weight: 400;">삭제</a>',
		        '<a href="#" class="rule_align_up" style="text-align: center; color: #bbb; font-size: 13px; font-weight: 400;">↑</a> <a href="#" class="rule_align_down" style="text-align: center; color: #bbb; font-size: 13px; font-weight: 400;">↓</a>'
		     ];
		           
             table.row(editRuleIdx).data(editRow);
		}
        table.draw();
        
        lf_addClickEventRule();
        
        $('.policy_add').css('display', '');
        $('.policy_edit').css('display', 'none');
        
        $('#editRuleIdx').val('');
	});	
	
	$('#scanBtn').on('click',function(e){
		if($(this).hasClass('disabled')) return;
				
    	var data = {};
    	data.status = test_status; // 0 : 대기, 1 : 검사 준비, 2 : 검사 중
    	data.equipmarkname = selectData.equipmarkname;
    	data.masterip = selectData.masterip;    	
    	data.equip_id = selectData.hardwareid;
    	
    	cf_requestServer(_TR_MALWARE_STATUS, data, requestScanProgress);    
	});
	
	$('#stopBtn').on('click',function(e) {
		if($(this).hasClass('disabled')) return;
		//var name = selectData.equipmarkname + '(' + selectData.masterip + ')';
    	var data = {};
    	data.equipmarkname = selectData.equipmarkname;
    	data.masterip = selectData.masterip;    	
    	data.equip_id = selectData.hardwareid;
    	
    	swal("멀웨어 수동 검사","멀웨어 검사를 취소하겠습니까?","./assets/images/icon_alert01.png", {
	        buttons: ["취소", "확인"],
	    }).then(function(willDelete) {
	        if (willDelete) {
	        	cf_requestServer(_TR_MALWARE_SCAN_STOP, data, requestStopProgress);          
	        }
	    });	    
	});
	
}

function initPane() {
	$('.chk_box input[type=checkbox]').prop('checked', false);	
	$('.rdo_box input[type=radio]').eq(0).prop('checked', true);	
	//initFileTree('Tree02');
    table.clear().draw();
}

function initAgent() {
	var dflDate = moment().format('YYYYMMDD');
	
	$('#registertime').val(dflDate);
	$('#modifytime').val(dflDate);
	$('#equipmarkname').val('');
	$('#equiplocation').val('');
	$('#masterip').val('');
	$('#osver').val('');
	$('#company').val('');
	$('#manager').val('');
	$('#groupname').val('');
	$('#groupid').val('');
	
	$('#saveBtn').addClass('insert');
	$('#saveBtn').removeClass('update');
	
	setSelectIndex('service_state', 0);
	setSelectIndex('log_state', 0);
	$('#log_count').val(100);
}

function requestScanProgress(data) {
	if(data.body.status != _STATUS['SCAN_IDLE']) {
		lf_setModalData(data.body);
		$('#progressBtn').trigger('click');
		return;
	}
	
	startScan();	
}

function requestStopProgress(data) {
	if(data.body.status != _STATUS['SCAN_IDLE']) {
		swal("확인", "멀웨어 수동 검사를 취소 할 수 없습니다.", {
			icon: "./assets/images/icon_alert04.png",
			buttons:"확인"
		});
		
		lf_setModalData(data.body);
		
		return;
	}
	
	stopScan();	
}

function clickNode(data) {
	var id = data.node.id;
	var icon = data.node.icon;
	
	var iconType = data.node.original.type;
	if(iconType != 'file' && iconType != 'file_offline') {
		//console.log('only agent : ' + id);
		return;
	}
	
	var ref = $('#Tree01 .tree_wrap').jstree(true);
    var sel = ref.get_selected();
    
    if(sel) {
    	selectData = dataMap[sel];
    	var name = selectData.equipmarkname + '(' + selectData.masterip + ')';
    	var data = {};
    	data.status = test_status; // 0 : 대기, 1 : 검사 준비, 2 : 검사 중
    	data.equipmarkname = selectData.equipmarkname;
    	data.masterip = selectData.masterip;    	
    	data.equip_id = selectData.hardwareid;
    	
    	$('#selAgentID').val(selectData.hardwareid);
    	
    	initFileTree('Tree02');
    	cf_requestServer(_TR_MALWARE_STATUS, data, lf_serviceCall800201CallBack);    		
    } else {
    	swal("확인", "자산 정보를 찾을 수 없습니다.", {
			icon: "./assets/images/icon_alert04.png",
			buttons:"확인"
		});
    }
}	

function selectTree() {
	initTree('Tree01');

	selectData = {};
	treeNodeMap = {};
	dataMap = {};
	
	selectGroupList();
}


function selectGroupList(){
	var body = {};
		
	body['groupId'] = 'G0000000000000';

	console.log(body);
	
	cf_requestServer(_TR_GROUP_SEARCH, body, lf_serviceCall800101CallBack);	
}

function selectAgentList(){
	var body = {};
		
	body['groupId'] = 'G0000000000000';
	
	cf_requestServer(_TR_CLOUD_SERVER_STATUS, body, lf_serviceCall600072CallBack);	
}

function addGroup(groupName) {
	var body = {};
	if(!groupName || groupName.length < 2) {
		groupName = "undefined";
	}
	
	body['groupName'] = groupName;
	body['parentGroupId'] = 'G0000000000000';
	body['groupDesc'] = 'Aegis';
	body['email'] = 'Aegis';
	body['mobile'] = 'Aegis';
	body['fax'] = 'Aegis';
	body['tel'] = 'Aegis';
	body['managerName'] = 'Aegis';
	
	cf_requestServer(_TR_GROUP_INSERT, body, function(data) {
		selectTree();
	});		
}

function initGroupNode() {
	var treeName = 'Tree01';
	var pNode = $('#' + treeName + ' .tree_wrap').jstree(true).get_node($('#' + treeName + ' li[data-jstree*=G0000000000000]'));
	if(!pNode) pNode = $('#' + treeName + ' .tree_wrap').jstree(true).get_node(treeNodeMap[treeName + '_' + parentId]);
	if(!pNode) return false;

	var sel = pNode.id;
	var ref = $('#' + treeName + ' .tree_wrap').jstree(true);
	if(sel) {		
		var children = ref.get_node(sel).children;
		$.each(children, function(index, item) {
			var agentList = ref.get_node(item).children;
			var groupName = ref.get_node(item).text;			
			//console.log(groupName + '/' + agentList.length);			
			var s = groupName.lastIndexOf('(');
			if(s > 0) {						
				groupName = groupName.substring(0, s)
			}
			groupName = groupName + '(' + agentList.length + ')';
			ref.rename_node(item, groupName);
		});
	}
}

function addGroupNode(treeName, parentId, data) {
	var groupId;
	var groupName;
	if(data) {
		groupName = data['groupname']; 
		groupId = data['groupid'];
	}
	
	var pNode = $('#' + treeName + ' .tree_wrap').jstree(true).get_node($('#' + treeName + ' li[data-jstree*=' + parentId + ']'));
	if(!pNode) pNode = $('#' + treeName + ' .tree_wrap').jstree(true).get_node(treeNodeMap[treeName + '_' + parentId]);
	if(!pNode) return false;

	var sel = pNode.id;
    sel = sel[0];
            
    var ref = $('#' + treeName + ' .tree_wrap').jstree(true);
    var newNode = { "cloudid": groupId, "type": "folder", "state" : "open" };

	sel = ref.create_node(pNode, newNode, "last", null);

    if(sel) {
    	treeNodeMap[treeName + '_' + groupId] = sel;
    	ref.rename_node(sel, groupName); 
    	dataMap[sel] = data;    
    }
    
    $('#' + treeName + ' .tree_wrap').jstree("open_all");
}



function addAgentNode(treeName, parentId, data) {
	var agentId = 'E0000000000000';
	var agentName = 'undefined';
	if(data) {
		agentName = data['equipmarkname'] + ' (' + data['masterip'] + ')'; 
		agentId = data['hardwareid'];
	}
	
	var pNode = $('#' + treeName + ' .tree_wrap').jstree(true).get_node($('#' + treeName + ' li[data-jstree*=' + parentId + ']'));
	if(!pNode) pNode = $('#' + treeName + ' .tree_wrap').jstree(true).get_node(treeNodeMap[treeName + '_' + parentId]);
	if(!pNode) {
		console.log('pNode(' + parentId + ') not found');
		return;
	}
	
	//var pNode = $('#' + treeName + ' .tree_wrap').jstree(true).get_node(treeNodeMap[treeName + '_' + parentId]);
	//if(!pNode) {
	//	console.log('pNode(' + parentId + ') not found');
	//	return;
	//}
	var sel = pNode.id;
    sel = sel[0];
            
    var ref = $('#' + treeName + ' .tree_wrap').jstree(true);
    var newNode = { "cloudid": agentId, "type": data['devstatus'] == 1? "file":"file_offline", "state" : "open" };
            
	sel = ref.create_node(pNode, newNode, "last", null);
	
    if(sel) {
    	treeNodeMap[treeName + '_' + agentId] = sel;    	    
        ref.rename_node(sel, agentName);
        dataMap[sel] = data;
    }    
}

//var parent = ( $("#jstree").jstree(true).get_node( _this.selectedBrd_Id ) ).parent; 
//var children = $("#jstree").jstree().get_node( parentCode ).children;

function createGroup() {
	var treeName = 'Tree01';
	var parentId = 'G0000000000000';
	
	var pNode = $('#' + treeName + ' .tree_wrap').jstree(true).get_node($('#' + treeName + ' li[data-jstree*=' + parentId + ']'));
	if(!pNode) pNode = $('#' + treeName + ' .tree_wrap').jstree(true).get_node(treeNodeMap[treeName + '_' + parentId]);
	if(!pNode) return false;

	var ref = $('#' + treeName + ' .tree_wrap').jstree(true);
    var newNode = { "cloudid": "", "type": "folder", "state" : "open" };
    sel = ref.create_node(pNode,  newNode);
    if(sel) {
    	var groupName = ref.get_node(sel).text;
    	
        ref.edit(sel, null, function(){        	
        	if(groupName.length > 1) {
        		addGroup(ref.get_node(sel).text);
        	} else {
        		cf_alert(null, '그룹이름은 2글자 이상 입력하세요'); 
        		
        		ref.delete_node(ref.get_node(sel));
        	}
    	});
    }
}

function setSelectIndex(sel, i) {
	$('#' + sel + ' option').removeProp("selected");
	$('#' + sel + ' option:eq(' + i + ')').prop("selected", "true");
		
	$('#' + sel).next().find('.list li').removeClass('focus selected');
	$('#' + sel).next().find('.list li:nth-child(' + i + ')').addClass('focus selected');
	$('#' + sel).next().find('span.current').text($('#' + sel + ' option:selected').val());
}


function initTree(treeName) {
	var parentId = 'G0000000000000';
	var pNode = $('#' + treeName + ' .tree_wrap').jstree(true).get_node($('#' + treeName + ' li[data-jstree*=' + parentId + ']'));
	if(!pNode) pNode = $('#' + treeName + ' .tree_wrap').jstree(true).get_node(treeNodeMap[treeName + '_' + parentId]);
	if(!pNode) return false;
	
	console.log(pNode);	
	var children = $('#' + treeName + ' .tree_wrap').jstree().get_node(pNode).children;
	//console.log(children);
	$('#' + treeName + ' .tree_wrap').jstree('delete_node', children);
}

function lf_serviceCall800101CallBack(data) {
	var dataList = data.body['ROOT']['childlist'];
	
	console.log(dataList);
	
	$.each(dataList, function(index, item) {
		addGroupNode('Tree01', 'G0000000000000', item);
	});	
	
	selectAgentList();
}

function lf_serviceCall600072CallBack(data) {
	var dataList = data.body.dataList;
	
	//console.log(dataList);
		
	$.each(dataList, function(index, item) {
		var groupPath = (item['grouppath'] + ':' + item['groupid']).split(':');
		//console.log(item['equipmarkname'] + '/' + item['hardwareid'] + '/' + groupPath);
		if(groupPath.length > 1) {
			addAgentNode('Tree01', groupPath[1], item);
		}
	});
	
	initGroupNode();
}

////////////////////////////////////////////////////////////////////////////////////////
function lf_addClickEventRule() {	
    //var table = $table.DataTable();
    lf_loadAlignUi(table);
     
    $('.malware_del').off('click');
    $('.malware_del').click(function(event) {
        event.stopPropagation();
        table.row($(this).parents('tr')).remove().draw();
    });

    $('.rule_edit').off('click');
    $('.rule_edit').click(function(event) {
        lf_editMalwarePolicy(table, $(this));
        
        $('.policy_add').css('display', 'none');
        $('.policy_edit').css('display', '');
    });

    $('.rule_edit_cancel_btn').off('click');
    $('.rule_edit_cancel_btn').click(function() {    
        $('.policy_add').css('display', '');
        $('.policy_edit').css('display', 'none');
        
        $('#editRuleIdx').val('');
    });
}

function lf_clearEditModal($thisrel, isEditing){
    alert('lf_clearEditModal');
}

function lf_editMalwarePolicy(table, $this) { //
    $('#editRuleIdx').val(table.row($this.parents('tr')).index());
    var data = table.row($this.parents('tr')).data();
    
    $("#mode").val(data[0]); // 모드
    $("#filename").val(data[1]); // 파일
    /*
    var $LI = $('ul.malware_edit > li');
    
    var $innerLI = '';
    var cnt = 0;
    $LI.eq(0).find('ul.list > li').removeClass('selected').removeClass('focus'); // clear
    $LI.eq(0).find('span').text(data[0]);
    $innerLI = $LI.eq(0).find('ul.list').find('li');
    cnt = $innerLI.length;
    for (var i = 0; i < cnt; i++) {
        if ($innerLI.eq(i).text() === data[0]) {
            $innerLI.eq(i).addClass('selected focus'); // 모드
        }
    }
    $LI.eq(1).find('input[type="text"]').val(data[1]); // 파일
    */
}

function lf_loadAlignUi(table) {
	$('.rule_align_up').off('click');
	$('.rule_align_up').click(function(event) {
		var tr = $(this).parents('tr');
    	moveRow(tr, 'up');
	});
	
	$('.rule_align_down').off('click');
	$('.rule_align_down').click(function(event) {
		var tr = $(this).parents('tr');
    	moveRow(tr, 'down');
	});
	
	function moveRow(row, direction) {
		var count = table.rows().count();
	    var index = table.row(row).index();		
	    var order = -1;
	    if (direction === 'down') {
	      order = 1;
	    }
	    
	    var predict = index + order;
	    
	    if(predict < 0 || predict >= count) {
	    	return;
	    }
	    
	    var data1 = table.row(index).data();
	    data1.order += order;
	
	    var data2 = table.row(index + order).data();
	    data2.order += -order;
	
	    table.row(index).data(data2);
	    table.row(index + order).data(data1);
	
	    table.page(0).draw(false);
	    
	    lf_loadAlignUi(table);
	}
}



function lf_serviceCall800201CallBack(data) {
	var status = data.body.status;
	
	lf_setModalData(data.body);
		
	if(status == _STATUS['SCAN_IDLE']) { // 대기중
		var type;
    	var message;
    	var name = selectData.equipmarkname + '(' + selectData.masterip + ')';
    	if(selectData.devstatus == 1) {
    		type = "./assets/images/icon_alert01.png";
    		message = name + " 파일시스템을 로드하시겠습니까?";
    	} else {
    		type = "./assets/images/icon_alert04.png";
    		message = "경고 : 연결 불안정\n" + name + " 파일시스템을 로드하시겠습니까?";
    	}
    	
    	swal("확인", message, type, {
	        buttons: ["취소", "확인"],
	    }).then(function(willDelete) {
	        if(willDelete) {
	        	// 파일시스템 정보 요청
	        	requestFileSystem(selectData);
	        }
	    });
	} else if(status == _STATUS['SCAN_INIT'] || status == _STATUS['SCAN_START']) { 
		$('#progressBtn').trigger('click');
	} 
}

function lf_serviceCall800202CallBack(data) {
	var status = data.body.status;
	
	lf_setModalData(data.body);
	
	if(status == _STATUS['SCAN_IDLE']) {
		swal("확인", "수동 검사를 진행 할 수 없습니다. 관리자에게 문의하세요.", {
			icon: "./assets/images/icon_alert04.png",
			buttons:"확인"
		});	
	} else {
		$('#progressBtn').trigger('click');
	}	
}

function lf_serviceCall800203CallBack(data) {
	var status = data.body.status;
	
	lf_setModalData(data.body);
	
	if(status != _STATUS['SCAN_IDLE']) { 
		swal("확인", "멀웨어 수동 검사를 취소 할 수 없습니다.", {
			icon: "./assets/images/icon_alert04.png",
			buttons:"확인"
		});			
	} else {
		$('a.close').trigger('click');
	}
}

function _test(data, body) {
} 

function _test_idle() {	
	var data = {
		equip_id : 'E1627628822774', equipmarkname : 'agent134', masterip : '192.168.10.134'
	};
	if(selectData) {
		data.equipmarkname = selectData.equipmarkname;
		data.masterip = selectData.masterip;    	
		data.equip_id = selectData.hardwareid;
	}
	
	data.sid = "800201";
	data.status = _STATUS['SCAN_IDLE'];
	
	cf_requestServer("800200", data, _test);
}

function _test_init() {	
	var data = {
		equip_id : 'E1627628822774', equipmarkname : 'agent134', masterip : '192.168.10.134'
	};
	if(selectData) {
		data.equipmarkname = selectData.equipmarkname;
		data.masterip = selectData.masterip;    	
		data.equip_id = selectData.hardwareid;
	}
	
	data.sid = "800201";
	data.status = _STATUS['SCAN_INIT'];
	
	cf_requestServer("800200", data, _test);
}

function _test_start() {	
	var data = {
		equip_id : 'E1627628822774', equipmarkname : 'agent134', masterip : '192.168.10.134'
	};
	if(selectData) {
		data.equipmarkname = selectData.equipmarkname;
		data.masterip = selectData.masterip;    	
		data.equip_id = selectData.hardwareid;
	}
	
	data.sid = "800201";
	data.status = _STATUS['SCAN_START'];
	data.scanpath = "/home/jonghlee";	
	data.scancount = Math.floor(Math.random() * 100);
	data.filecount = data.scancount + 20;
	data.progress = Math.floor(Math.random() * 70) + 30;

	cf_requestServer("800200", data, _test);
}
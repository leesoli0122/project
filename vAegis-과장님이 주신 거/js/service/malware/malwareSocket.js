var malwareSocket = null;

$(function () {
	doConnect();
});


function doConnect() {
	if(malwareSocket != null) return;
	
	malwareSocket = new WebSocket(
		(window.location.protocol == "http:"? "ws":"wss") +
		"://" + window.location.host + "/event.ws"
	);
	malwareSocket.onopen = function() {
		console.log("Malware 연결");
	
		malwareSocket.onmessage = onMessage;
        malwareSocket.onclose = onClose;
        malwareSocket.onerror = onError;

        registTopic();
    };
}

function registTopic() {
    var topicList = new Array();
    topicList.push(_TOPIC_FILESYSTEM);
    topicList.push(_TOPIC_MALWARE_HISTORY);
    topicList.push(_TOPIC_MALWARE_EVENT);
    topicList.push(_TOPIC_MALWARE_SCAN);
    topicList.push(_TOPIC_EXFILESYSTEM);

    var headerJson = new Object();
    headerJson.wsId = _WS_SET; // SET:100001, ADD:100002, DEL:100003, GET:100004
    
    var bodyJson = new Object();
    bodyJson.topicList = topicList;

    var json = new Object();
    json.header = headerJson;
    json.body = bodyJson;

    if(malwareSocket != null) malwareSocket.send(JSON.stringify(json));
}

function onMessage(evt) {
    var jsonData = JSON.parse(evt.data);
    
    if (Array.isArray(jsonData)) {
    	$.each(jsonData, function(index, item){
    		if($('#selAgentID').val() != item.devID) return;
    		if(item.class == _TOPIC_FILESYSTEM) {    		    	
		        var fileData = {};
		        fileData.filePath = item.name_full;
		        if(item.type == 2) {
		        	fileData.fileType = 1;
		        } else {
		        	//console.log(item);
		        	return;
		        }
		        
		        addFSNode(fileData); // fileSystem.js
	        } else if(item.class == _TOPIC_EXFILESYSTEM) {
	        	//console.log(item);
	        	if($('#selAgentID').val() != item.devID) return;
	         	
	         	putExceptFile(item);
	        } else if(item.class == _TOPIC_MALWARE_SCAN) {
	        	if(item.devID != selectData.hardwareid) return;
	        	//console.log(item);
	        	var scanData = {};
	        	scanData.id = item.id;
	        	scanData.equipmarkname = item.devName;
	        	scanData.masterip = item.devIP;
	        	scanData.equip_id = item.devID;
	        	
	        	scanData.status = item.status;
	        	if(item.status == _STATUS['SCAN_INIT']) {
	        		scanData.difftime = 1;
	        	} else {
	        		scanData.difftime = item.difftime;
	        	}
	        	
	        	scanData.filename = item.filename;	        	
	        	scanData.infectcount = item.infectcount;
	        	scanData.filecount = item.filecount;
	        	scanData.dircount = item.dircount;
	        	scanData.inittime = item.inittime;
	        	

	        	if($('#progress_modal_malware').css('display') == 'none') {
					$('#progressBtn').trigger('click');			
				}
	        	lf_setModalData(scanData) //loadModal.js
	        } else if(item.class == _TOPIC_MALWARE_HISTORY) {
	        	//console.log(item);
	        } else if(item.class == _TOPIC_MALWARE_EVENT) {
	        	//console.log(item);
	        }

	    });
    }		
}

function onClose(evt) {
    console.log("연결 끊김");
}

function onError(evt) {
    console.log("Error : " + evt);
}
